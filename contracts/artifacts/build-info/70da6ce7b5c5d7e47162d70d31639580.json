{
	"id": "70da6ce7b5c5d7e47162d70d31639580",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TestToken.sol": {
				"content": "pragma solidity ^0.5.1;\r\n\r\nimport { ERC20 } from \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract ToyToken is ERC20 {\r\n    \r\n    function mint(address account, uint256 amount) external {\r\n        _mint(account, amount);\r\n    }\r\n}"
			},
			"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the `IERC20` interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using `_mint`.\n * For a generic mechanism see `ERC20Mintable`.\n *\n * *For a detailed writeup see our guide [How to implement supply\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See `IERC20.approve`.\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IERC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IERC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IERC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IERC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of `ERC20`;\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n     /**\n     * @dev Destoys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\n     * zero by default.\n     *\n     * This value changes when `approve` or `transferFrom` are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * > Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an `Approval` event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to `approve`. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/TestToken.sol": {
				"ToyToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/TestToken.sol\":109:249  contract ToyToken is ERC20 {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/TestToken.sol\":109:249  contract ToyToken is ERC20 {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TestToken.sol\":109:249  contract ToyToken is ERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/TestToken.sol\":109:249  contract ToyToken is ERC20 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TestToken.sol\":149:246  function mint(address account, uint256 amount) external {\r... */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/TestToken.sol\":149:246  function mint(address account, uint256 amount) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      stop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_9:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_11:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_15:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2518:2522  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2534:2570  _approve(msg.sender, spender, value) */\n      tag_40\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2543:2553  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2555:2562  spender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2564:2569  value */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2534:2542  _approve */\n      tag_41\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2534:2570  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_40:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2587:2591  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2580:2591  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n    tag_17:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1558:1565  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1584:1596  _totalSupply */\n      sload(0x02)\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1577:1596  return _totalSupply */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_20:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3144:3148  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3160:3196  _transfer(sender, recipient, amount) */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3170:3176  sender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3178:3187  recipient */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3189:3195  amount */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3160:3169  _transfer */\n      tag_45\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3160:3196  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_44:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3206:3279  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_46\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3215:3221  sender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3223:3233  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3278  _allowances[sender][msg.sender].sub(amount) */\n      tag_47\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3271:3277  amount */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3246  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3254  _allowances[sender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3247:3253  sender */\n      dup11\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3254  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3266  _allowances[sender][msg.sender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3255:3265  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3266  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3270  _allowances[sender][msg.sender].sub */\n      tag_48\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3278  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3206:3214  _approve */\n      tag_41\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3206:3279  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_46:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3296:3300  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3289:3300  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_23:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3782:3786  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3798:3877  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_50\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3807:3817  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3819:3826  spender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3876  _allowances[msg.sender][spender].add(addedValue) */\n      tag_51\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3865:3875  addedValue */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3839  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3851  _allowances[msg.sender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3840:3850  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3851  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3860  _allowances[msg.sender][spender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3852:3859  spender */\n      dup10\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3860  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3864  _allowances[msg.sender][spender].add */\n      tag_52\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3876  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_51:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3798:3806  _approve */\n      tag_41\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3798:3877  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_50:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3894:3898  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3887:3898  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestToken.sol\":149:246  function mint(address account, uint256 amount) external {\r... */\n    tag_26:\n        /* \"contracts/TestToken.sol\":216:238  _mint(account, amount) */\n      tag_54\n        /* \"contracts/TestToken.sol\":222:229  account */\n      dup3\n        /* \"contracts/TestToken.sol\":231:237  amount */\n      dup3\n        /* \"contracts/TestToken.sol\":216:221  _mint */\n      tag_55\n        /* \"contracts/TestToken.sol\":216:238  _mint(account, amount) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/TestToken.sol\":149:246  function mint(address account, uint256 amount) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n    tag_29:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1718:1725  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1744:1753  _balances */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1744:1762  _balances[account] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1754:1761  account */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1744:1762  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1737:1762  return _balances[account] */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_32:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4477:4481  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4493:4577  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_58\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4502:4512  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4514:4521  spender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4576  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_59\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4560:4575  subtractedValue */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4534  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4546  _allowances[msg.sender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4535:4545  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4546  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4555  _allowances[msg.sender][spender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4547:4554  spender */\n      dup10\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4555  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4559  _allowances[msg.sender][spender].sub */\n      tag_48\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4576  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4493:4501  _approve */\n      tag_41\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4493:4577  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_58:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4594:4598  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4587:4598  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_35:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2041:2045  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2057:2097  _transfer(msg.sender, recipient, amount) */\n      tag_61\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2067:2077  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2079:2088  recipient */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2090:2096  amount */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2057:2066  _transfer */\n      tag_45\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2057:2097  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_61:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2114:2118  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2107:2118  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_38:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2255:2262  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2292  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2299  _allowances[owner] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2293:2298  owner */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2299  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2308  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2300:2307  spender */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2308  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2274:2308  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7117:7446  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_41:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7226:7227  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7209:7228  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7209:7214  owner */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7209:7228  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7201:7269  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7306:7307  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7287:7308  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7287:7294  spender */\n      dup3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7287:7308  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7279:7347  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7388:7393  value */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7369  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7376  _allowances[owner] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7370:7375  owner */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7376  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7385  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7377:7384  spender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7385  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7393  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7424:7431  spender */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7417:7422  owner */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7433:7438  value */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7117:7446  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5079:5501  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_45:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5194:5195  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5176:5196  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5176:5182  sender */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5176:5196  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5168:5238  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5277:5278  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5256:5279  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5256:5265  recipient */\n      dup3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5256:5279  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5248:5319  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5379  _balances[sender].sub(amount) */\n      tag_69\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5372:5378  amount */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5359  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5367  _balances[sender] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5360:5366  sender */\n      dup7\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5367  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5371  _balances[sender].sub */\n      tag_48\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5379  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5330:5339  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5330:5347  _balances[sender] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5340:5346  sender */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5330:5347  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5330:5379  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5444  _balances[recipient].add(amount) */\n      tag_70\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5437:5443  amount */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5421  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5432  _balances[recipient] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5422:5431  recipient */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5432  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5436  _balances[recipient].add */\n      tag_52\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5444  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5389:5398  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5389:5409  _balances[recipient] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5399:5408  recipient */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5389:5409  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5389:5444  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5476:5485  recipient */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5468:5474  sender */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5487:5493  amount */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5079:5501  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1364:1365  a */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1359:1360  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1359:1365  b <= a */\n      gt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1351:1400  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1410:1419  uint256 c */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1426:1427  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1422:1423  a */\n      dup5\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1422:1427  a - b */\n      sub\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1410:1427  uint256 c = a - b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1445:1446  c */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1438:1446  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_52:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5771:6073  function _mint(address account, uint256 amount) internal {... */\n    tag_55:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5865:5866  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5846:5867  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5846:5853  account */\n      dup3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5846:5867  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5838:5903  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5929:5953  _totalSupply.add(amount) */\n      tag_77\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5946:5952  amount */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5929:5941  _totalSupply */\n      sload(0x02)\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5929:5945  _totalSupply.add */\n      tag_52\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5929:5953  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5914:5926  _totalSupply */\n      0x02\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5914:5953  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5984:6014  _balances[account].add(amount) */\n      tag_78\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":6007:6013  amount */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5984:5993  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5984:6002  _balances[account] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5994:6001  account */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5984:6002  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5984:6006  _balances[account].add */\n      tag_52\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5984:6014  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5963:5972  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5963:5981  _balances[account] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5973:5980  account */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5963:5981  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5963:6014  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":6050:6057  account */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":6029:6066  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":6046:6047  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":6029:6066  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":6059:6065  amount */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":6029:6066  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5771:6073  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820c5b8f18ac53d5850b5bf8cbdf612acf2a407e00da2803fcc117a6e6ebc50324264736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610f24806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f191461020857806370a0823114610256578063a457c2d7146102ae578063a9059cbb14610314578063dd62ed3e1461037a57610093565b8063095ea7b31461009857806318160ddd146100fe57806323b872dd1461011c57806339509351146101a2575b600080fd5b6100e4600480360360408110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103f2565b604051808215151515815260200191505060405180910390f35b610106610409565b6040518082815260200191505060405180910390f35b6101886004803603606081101561013257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610413565b604051808215151515815260200191505060405180910390f35b6101ee600480360360408110156101b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104c4565b604051808215151515815260200191505060405180910390f35b6102546004803603604081101561021e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610569565b005b6102986004803603602081101561026c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610577565b6040518082815260200191505060405180910390f35b6102fa600480360360408110156102c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105bf565b604051808215151515815260200191505060405180910390f35b6103606004803603604081101561032a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610664565b604051808215151515815260200191505060405180910390f35b6103dc6004803603604081101561039057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061067b565b6040518082815260200191505060405180910390f35b60006103ff338484610702565b6001905092915050565b6000600254905090565b60006104208484846108f9565b6104b984336104b485600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9590919063ffffffff16565b610702565b600190509392505050565b600061055f338461055a85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c1e90919063ffffffff16565b610702565b6001905092915050565b6105738282610ca6565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061065a338461065585600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9590919063ffffffff16565b610702565b6001905092915050565b60006106713384846108f9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610788576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610ecc6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561080e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610e856022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561097f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610ea76025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610e626023913960400191505060405180910390fd5b610a56816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ae9816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c1e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610c0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610c9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b610d5e81600254610c1e90919063ffffffff16565b600281905550610db5816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c1e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820c5b8f18ac53d5850b5bf8cbdf612acf2a407e00da2803fcc117a6e6ebc50324264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF24 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37A JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x569 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3FF CALLER DUP5 DUP5 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420 DUP5 DUP5 DUP5 PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x4B9 DUP5 CALLER PUSH2 0x4B4 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55F CALLER DUP5 PUSH2 0x55A DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 DUP3 DUP3 PUSH2 0xCA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65A CALLER DUP5 PUSH2 0x655 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 CALLER DUP5 DUP5 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xECC PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE85 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEA7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE62 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA56 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAE9 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5E DUP2 PUSH1 0x2 SLOAD PUSH2 0xC1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0xDB5 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC5 0xB8 CALL DUP11 0xC5 RETURNDATASIZE PC POP 0xB5 0xBF DUP13 0xBD 0xF6 SLT 0xAC CALLCODE LOG4 SMOD 0xE0 0xD LOG2 DUP1 EXTCODEHASH 0xCC GT PUSH27 0x6E6EBC50324264736F6C6343000511003200000000000000000000 ",
							"sourceMap": "109:140:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;109:140:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f191461020857806370a0823114610256578063a457c2d7146102ae578063a9059cbb14610314578063dd62ed3e1461037a57610093565b8063095ea7b31461009857806318160ddd146100fe57806323b872dd1461011c57806339509351146101a2575b600080fd5b6100e4600480360360408110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103f2565b604051808215151515815260200191505060405180910390f35b610106610409565b6040518082815260200191505060405180910390f35b6101886004803603606081101561013257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610413565b604051808215151515815260200191505060405180910390f35b6101ee600480360360408110156101b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104c4565b604051808215151515815260200191505060405180910390f35b6102546004803603604081101561021e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610569565b005b6102986004803603602081101561026c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610577565b6040518082815260200191505060405180910390f35b6102fa600480360360408110156102c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105bf565b604051808215151515815260200191505060405180910390f35b6103606004803603604081101561032a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610664565b604051808215151515815260200191505060405180910390f35b6103dc6004803603604081101561039057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061067b565b6040518082815260200191505060405180910390f35b60006103ff338484610702565b6001905092915050565b6000600254905090565b60006104208484846108f9565b6104b984336104b485600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9590919063ffffffff16565b610702565b600190509392505050565b600061055f338461055a85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c1e90919063ffffffff16565b610702565b6001905092915050565b6105738282610ca6565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061065a338461065585600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9590919063ffffffff16565b610702565b6001905092915050565b60006106713384846108f9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610788576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610ecc6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561080e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610e856022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561097f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610ea76025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610e626023913960400191505060405180910390fd5b610a56816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ae9816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c1e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610c0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610c9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b610d5e81600254610c1e90919063ffffffff16565b600281905550610db5816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c1e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820c5b8f18ac53d5850b5bf8cbdf612acf2a407e00da2803fcc117a6e6ebc50324264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37A JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x569 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3FF CALLER DUP5 DUP5 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420 DUP5 DUP5 DUP5 PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x4B9 DUP5 CALLER PUSH2 0x4B4 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55F CALLER DUP5 PUSH2 0x55A DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 DUP3 DUP3 PUSH2 0xCA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65A CALLER DUP5 PUSH2 0x655 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 CALLER DUP5 DUP5 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xECC PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE85 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEA7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE62 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA56 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAE9 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5E DUP2 PUSH1 0x2 SLOAD PUSH2 0xC1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0xDB5 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC5 0xB8 CALL DUP11 0xC5 RETURNDATASIZE PC POP 0xB5 0xBF DUP13 0xBD 0xF6 SLT 0xAC CALLCODE LOG4 SMOD 0xE0 0xD LOG2 DUP1 EXTCODEHASH 0xCC GT PUSH27 0x6E6EBC50324264736F6C6343000511003200000000000000000000 ",
							"sourceMap": "109:140:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;109:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2453:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1514:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3055:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3055:252:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3702:203;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3702:203:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;149:97:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;149:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1661:108:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1661:108:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4392:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4392:213:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1972:153;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1972:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2183:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2183:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2453:145;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;2587:4;2580:11;;2453:145;;;;:::o;1514:89::-;1558:7;1584:12;;1577:19;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;3206:73;3215:6;3223:10;3235:43;3271:6;3235:11;:19;3247:6;3235:19;;;;;;;;;;;;;;;:31;3255:10;3235:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3206:8;:73::i;:::-;3296:4;3289:11;;3055:252;;;;;:::o;3702:203::-;3782:4;3798:79;3807:10;3819:7;3828:48;3865:10;3828:11;:23;3840:10;3828:23;;;;;;;;;;;;;;;:32;3852:7;3828:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3798:8;:79::i;:::-;3894:4;3887:11;;3702:203;;;;:::o;149:97:0:-;216:22;222:7;231:6;216:5;:22::i;:::-;149:97;;:::o;1661:108:2:-;1718:7;1744:9;:18;1754:7;1744:18;;;;;;;;;;;;;;;;1737:25;;1661:108;;;:::o;4392:213::-;4477:4;4493:84;4502:10;4514:7;4523:53;4560:15;4523:11;:23;4535:10;4523:23;;;;;;;;;;;;;;;:32;4547:7;4523:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4493:8;:84::i;:::-;4594:4;4587:11;;4392:213;;;;:::o;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;:::-;2114:4;2107:11;;1972:153;;;;:::o;2183:132::-;2255:7;2281:11;:18;2293:5;2281:18;;;;;;;;;;;;;;;:27;2300:7;2281:27;;;;;;;;;;;;;;;;2274:34;;2183:132;;;;:::o;7117:329::-;7226:1;7209:19;;:5;:19;;;;7201:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7306:1;7287:21;;:7;:21;;;;7279:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:5;7358:11;:18;7370:5;7358:18;;;;;;;;;;;;;;;:27;7377:7;7358:27;;;;;;;;;;;;;;;:35;;;;7424:7;7408:31;;7417:5;7408:31;;;7433:5;7408:31;;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;5194:1;5176:20;;:6;:20;;;;5168:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5277:1;5256:23;;:9;:23;;;;5248:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:29;5372:6;5350:9;:17;5360:6;5350:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5330:9;:17;5340:6;5330:17;;;;;;;;;;;;;;;:49;;;;5412:32;5437:6;5412:9;:20;5422:9;5412:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5389:9;:20;5399:9;5389:20;;;;;;;;;;;;;;;:55;;;;5476:9;5459:35;;5468:6;5459:35;;;5487:6;5459:35;;;;;;;;;;;;;;;;;;5079:422;;;:::o;1274:179:1:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;5771:302:2:-;5865:1;5846:21;;:7;:21;;;;5838:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:24;5946:6;5929:12;;:16;;:24;;;;:::i;:::-;5914:12;:39;;;;5984:30;6007:6;5984:9;:18;5994:7;5984:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;5963:9;:18;5973:7;5963:18;;;;;;;;;;;;;;;:51;;;;6050:7;6029:37;;6046:1;6029:37;;;6059:6;6029:37;;;;;;;;;;;;;;;;;;5771:302;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "775200",
								"executionCost": "812",
								"totalCost": "776012"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"totalSupply()": "1036",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 249,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "MSTORE"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "POP"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "DUP1"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "CODECOPY"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 109,
									"end": 249,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c5b8f18ac53d5850b5bf8cbdf612acf2a407e00da2803fcc117a6e6ebc50324264736f6c63430005110032",
									".code": [
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "MSTORE"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "LT"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "SHR"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "GT"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 249,
											"name": "REVERT"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "AND"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MLOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MSTORE"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MLOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SUB"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "RETURN"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP3"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "ADD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SUB"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "RETURN"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "AND"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "AND"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MSTORE"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SUB"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "RETURN"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "AND"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MLOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MSTORE"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MLOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SUB"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "RETURN"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "JUMPDEST"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "DUP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "DUP2"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "ADD"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "DUP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "DUP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "AND"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "ADD"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP3"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP2"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "DUP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "ADD"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP3"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP2"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "SWAP1"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "POP"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "POP"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "POP"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "JUMPDEST"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "STOP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "AND"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP3"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP3"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MSTORE"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "RETURN"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "AND"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MSTORE"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "RETURN"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "AND"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MSTORE"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "RETURN"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "AND"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "AND"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MSTORE"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SUB"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "RETURN"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2553,
											"name": "CALLER"
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP5"
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "DUP5"
										},
										{
											"begin": 2534,
											"end": 2542,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "JUMPDEST"
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "SLOAD"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "SWAP1"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DUP5"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP5"
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP5"
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP5"
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "CALLER"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "DUP6"
										},
										{
											"begin": 3235,
											"end": 3246,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP11"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "KECCAK256"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "KECCAK256"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": 3235,
											"end": 3270,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3235,
											"end": 3270,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3214,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "JUMPDEST"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP4"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 3807,
											"end": 3817,
											"name": "CALLER"
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "DUP5"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3865,
											"end": 3875,
											"name": "DUP6"
										},
										{
											"begin": 3828,
											"end": 3839,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3850,
											"name": "CALLER"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "KECCAK256"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP10"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "KECCAK256"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SLOAD"
										},
										{
											"begin": 3828,
											"end": 3864,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 3828,
											"end": 3864,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "SWAP2"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "JUMPDEST"
										},
										{
											"begin": 3798,
											"end": 3806,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "JUMPDEST"
										},
										{
											"begin": 216,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 222,
											"end": 229,
											"name": "DUP3"
										},
										{
											"begin": 231,
											"end": 237,
											"name": "DUP3"
										},
										{
											"begin": 216,
											"end": 221,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 216,
											"end": 238,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 216,
											"end": 238,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 216,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "POP"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "POP"
										},
										{
											"begin": 149,
											"end": 246,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP1"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1761,
											"name": "DUP4"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "AND"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "AND"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "SWAP1"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "KECCAK256"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "SLOAD"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4502,
											"end": 4512,
											"name": "CALLER"
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP5"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 4560,
											"end": 4575,
											"name": "DUP6"
										},
										{
											"begin": 4523,
											"end": 4534,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "CALLER"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "KECCAK256"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP10"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "KECCAK256"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SLOAD"
										},
										{
											"begin": 4523,
											"end": 4559,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 4523,
											"end": 4559,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "SWAP2"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "JUMPDEST"
										},
										{
											"begin": 4493,
											"end": 4501,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "JUMPDEST"
										},
										{
											"begin": 4594,
											"end": 4598,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "SWAP1"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2067,
											"end": 2077,
											"name": "CALLER"
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP5"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP5"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "JUMPDEST"
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "SWAP1"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2292,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP5"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "SWAP1"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "KECCAK256"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "DUP4"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "SWAP1"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "KECCAK256"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "SLOAD"
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "SWAP1"
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "JUMPDEST"
										},
										{
											"begin": 7226,
											"end": 7227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "AND"
										},
										{
											"begin": 7209,
											"end": 7214,
											"name": "DUP4"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "AND"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "EQ"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "ISZERO"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "JUMPI"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MLOAD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP3"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SUB"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP3"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "CODECOPY"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "POP"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "POP"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MLOAD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SUB"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "REVERT"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "JUMPDEST"
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "AND"
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "DUP3"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "AND"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "EQ"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "ISZERO"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "JUMPI"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MLOAD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP3"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SUB"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP3"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "CODECOPY"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MLOAD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SUB"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "REVERT"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "JUMPDEST"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DUP1"
										},
										{
											"begin": 7358,
											"end": 7369,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7375,
											"name": "DUP6"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "KECCAK256"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7384,
											"name": "DUP5"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "KECCAK256"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "SSTORE"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "POP"
										},
										{
											"begin": 7424,
											"end": 7431,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7417,
											"end": 7422,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7433,
											"end": 7438,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP3"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MSTORE"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "ADD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SUB"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "LOG3"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "JUMPDEST"
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "AND"
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP4"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "AND"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "EQ"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "ISZERO"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "JUMPI"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MLOAD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SUB"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "CODECOPY"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "POP"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "POP"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MLOAD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SUB"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "REVERT"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "JUMPDEST"
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "EQ"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "ISZERO"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPI"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "CODECOPY"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "REVERT"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPDEST"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP1"
										},
										{
											"begin": 5360,
											"end": 5366,
											"name": "DUP7"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "MSTORE"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "ADD"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "MSTORE"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "ADD"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "KECCAK256"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "SLOAD"
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "SWAP2"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "JUMPDEST"
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP1"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP6"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "AND"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "AND"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "SWAP1"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "KECCAK256"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "SSTORE"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP1"
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP6"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "KECCAK256"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "SLOAD"
										},
										{
											"begin": 5412,
											"end": 5436,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5412,
											"end": 5436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP1"
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP5"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "MSTORE"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "MSTORE"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "KECCAK256"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "SSTORE"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "DUP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "AND"
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "DUP4"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "AND"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP4"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MLOAD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP3"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MSTORE"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "ADD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "POP"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "POP"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MLOAD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SUB"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "LOG3"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "GT"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "ISZERO"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "REVERT"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP3"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP5"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "SUB"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "SWAP1"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5771,
											"end": 6073,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5771,
											"end": 6073,
											"name": "JUMPDEST"
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5867,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5846,
											"end": 5867,
											"name": "AND"
										},
										{
											"begin": 5846,
											"end": 5853,
											"name": "DUP3"
										},
										{
											"begin": 5846,
											"end": 5867,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5846,
											"end": 5867,
											"name": "AND"
										},
										{
											"begin": 5846,
											"end": 5867,
											"name": "EQ"
										},
										{
											"begin": 5846,
											"end": 5867,
											"name": "ISZERO"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "JUMPI"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "MLOAD"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP2"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "MSTORE"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "ADD"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP1"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP1"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "ADD"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP3"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP2"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "SUB"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP3"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "MSTORE"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP2"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "MSTORE"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "ADD"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP1"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP2"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "MSTORE"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "POP"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "ADD"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "SWAP2"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "POP"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "POP"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "MLOAD"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "DUP1"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "SWAP2"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "SUB"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "SWAP1"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "REVERT"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5838,
											"end": 5903,
											"name": "JUMPDEST"
										},
										{
											"begin": 5929,
											"end": 5953,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "DUP2"
										},
										{
											"begin": 5929,
											"end": 5941,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5941,
											"name": "SLOAD"
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 5953,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 5953,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 5953,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5929,
											"end": 5953,
											"name": "AND"
										},
										{
											"begin": 5929,
											"end": 5953,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5929,
											"end": 5953,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5929,
											"end": 5953,
											"name": "JUMPDEST"
										},
										{
											"begin": 5914,
											"end": 5926,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5914,
											"end": 5953,
											"name": "DUP2"
										},
										{
											"begin": 5914,
											"end": 5953,
											"name": "SWAP1"
										},
										{
											"begin": 5914,
											"end": 5953,
											"name": "SSTORE"
										},
										{
											"begin": 5914,
											"end": 5953,
											"name": "POP"
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 6007,
											"end": 6013,
											"name": "DUP2"
										},
										{
											"begin": 5984,
											"end": 5993,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "DUP1"
										},
										{
											"begin": 5994,
											"end": 6001,
											"name": "DUP6"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "AND"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "AND"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "DUP2"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "MSTORE"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "ADD"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "SWAP1"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "DUP2"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "MSTORE"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "ADD"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "KECCAK256"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "SLOAD"
										},
										{
											"begin": 5984,
											"end": 6006,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5984,
											"end": 6006,
											"name": "SWAP1"
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "SWAP2"
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "SWAP1"
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "AND"
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "JUMPDEST"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "DUP1"
										},
										{
											"begin": 5973,
											"end": 5980,
											"name": "DUP5"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "AND"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "AND"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "DUP2"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "MSTORE"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "ADD"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "SWAP1"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "DUP2"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "MSTORE"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "ADD"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "KECCAK256"
										},
										{
											"begin": 5963,
											"end": 6014,
											"name": "DUP2"
										},
										{
											"begin": 5963,
											"end": 6014,
											"name": "SWAP1"
										},
										{
											"begin": 5963,
											"end": 6014,
											"name": "SSTORE"
										},
										{
											"begin": 5963,
											"end": 6014,
											"name": "POP"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP2"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "AND"
										},
										{
											"begin": 6046,
											"end": 6047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "AND"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP4"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "MLOAD"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "DUP1"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "DUP3"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "DUP2"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "MSTORE"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "ADD"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "SWAP2"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "POP"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "POP"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "MLOAD"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "DUP1"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "SWAP2"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "SUB"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "SWAP1"
										},
										{
											"begin": 6029,
											"end": 6066,
											"name": "LOG3"
										},
										{
											"begin": 5771,
											"end": 6073,
											"name": "POP"
										},
										{
											"begin": 5771,
											"end": 6073,
											"name": "POP"
										},
										{
											"begin": 5771,
											"end": 6073,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TestToken.sol\":\"ToyToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TestToken.sol\":{\"keccak256\":\"0xb9e6b6cdc435f7521176133c26aa5725ee649f6a0dccbe8e5e4a2834262bf361\",\"urls\":[\"bzz-raw://b07fab3ab92deba1a5d1e8c7b933efcd1a9247dc1a519374510a8bec833b85e8\",\"dweb:/ipfs/Qmd7WLUEjxyEaswr6s8gpQJgYj8WWU2Dn1Kp5yBQxABqJz\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 165,
								"contract": "contracts/TestToken.sol:ToyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 171,
								"contract": "contracts/TestToken.sol:ToyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 173,
								"contract": "contracts/TestToken.sol:ToyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":589:3527  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":589:3527  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582059d946856bbc9f8f9d925e8b6829b7a2b9de5f0d46dcca5520c0edf3e5f1398464736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582059d946856bbc9f8f9d925e8b6829b7a2b9de5f0d46dcca5520c0edf3e5f1398464736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSIZE 0xD9 CHAINID DUP6 PUSH12 0xBC9F8F9D925E8B6829B7A2B9 0xDE 0x5F 0xD CHAINID 0xDC 0xCA SSTORE KECCAK256 0xC0 0xED RETURN 0xE5 CALL CODECOPY DUP5 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:2938:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582059d946856bbc9f8f9d925e8b6829b7a2b9de5f0d46dcca5520c0edf3e5f1398464736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSIZE 0xD9 CHAINID DUP6 PUSH12 0xBC9F8F9D925E8B6829B7A2B9 0xDE 0x5F 0xD CHAINID 0xDC 0xCA SSTORE KECCAK256 0xC0 0xED RETURN 0xE5 CALL CODECOPY DUP5 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:2938:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 3527,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 3527,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582059d946856bbc9f8f9d925e8b6829b7a2b9de5f0d46dcca5520c0edf3e5f1398464736f6c63430005110032",
									".code": [
										{
											"begin": 589,
											"end": 3527,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 3527,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the `IERC20` interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. * *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.",
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1232:7810  contract ERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1232:7810  contract ERC20 is IERC20 {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1232:7810  contract ERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1232:7810  contract ERC20 is IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_14:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2518:2522  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2534:2570  _approve(msg.sender, spender, value) */\n      tag_36\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2543:2553  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2555:2562  spender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2564:2569  value */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2534:2542  _approve */\n      tag_37\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2534:2570  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_36:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2587:2591  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2580:2591  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2453:2598  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n    tag_16:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1558:1565  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1584:1596  _totalSupply */\n      sload(0x02)\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1577:1596  return _totalSupply */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1514:1603  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_19:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3144:3148  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3160:3196  _transfer(sender, recipient, amount) */\n      tag_40\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3170:3176  sender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3178:3187  recipient */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3189:3195  amount */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3160:3169  _transfer */\n      tag_41\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3160:3196  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_40:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3206:3279  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_42\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3215:3221  sender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3223:3233  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3278  _allowances[sender][msg.sender].sub(amount) */\n      tag_43\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3271:3277  amount */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3246  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3254  _allowances[sender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3247:3253  sender */\n      dup11\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3254  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3266  _allowances[sender][msg.sender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3255:3265  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3266  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3270  _allowances[sender][msg.sender].sub */\n      tag_44\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3235:3278  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3206:3214  _approve */\n      tag_37\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3206:3279  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_42:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3296:3300  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3289:3300  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3055:3307  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_22:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3782:3786  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3798:3877  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_46\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3807:3817  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3819:3826  spender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3876  _allowances[msg.sender][spender].add(addedValue) */\n      tag_47\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3865:3875  addedValue */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3839  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3851  _allowances[msg.sender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3840:3850  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3851  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3860  _allowances[msg.sender][spender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3852:3859  spender */\n      dup10\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3860  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3864  _allowances[msg.sender][spender].add */\n      tag_48\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3828:3876  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3798:3806  _approve */\n      tag_37\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3798:3877  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_46:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3894:3898  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3887:3898  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":3702:3905  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n    tag_25:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1718:1725  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1744:1753  _balances */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1744:1762  _balances[account] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1754:1761  account */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1744:1762  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1737:1762  return _balances[account] */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1661:1769  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_28:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4477:4481  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4493:4577  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_51\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4502:4512  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4514:4521  spender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4576  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_52\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4560:4575  subtractedValue */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4534  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4546  _allowances[msg.sender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4535:4545  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4546  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4555  _allowances[msg.sender][spender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4547:4554  spender */\n      dup10\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4555  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4559  _allowances[msg.sender][spender].sub */\n      tag_44\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4523:4576  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4493:4501  _approve */\n      tag_37\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4493:4577  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_51:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4594:4598  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4587:4598  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":4392:4605  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2041:2045  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2057:2097  _transfer(msg.sender, recipient, amount) */\n      tag_54\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2067:2077  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2079:2088  recipient */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2090:2096  amount */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2057:2066  _transfer */\n      tag_41\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2057:2097  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_54:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2114:2118  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2107:2118  return true */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":1972:2125  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_34:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2255:2262  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2292  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2299  _allowances[owner] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2293:2298  owner */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2299  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2308  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2300:2307  spender */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2281:2308  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2274:2308  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":2183:2315  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7117:7446  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_37:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7226:7227  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7209:7228  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7209:7214  owner */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7209:7228  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7201:7269  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7306:7307  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7287:7308  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7287:7294  spender */\n      dup3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7287:7308  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7279:7347  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7388:7393  value */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7369  _allowances */\n      0x01\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7376  _allowances[owner] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7370:7375  owner */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7376  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7385  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7377:7384  spender */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7385  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7358:7393  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7424:7431  spender */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7417:7422  owner */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7433:7438  value */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7408:7439  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":7117:7446  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5079:5501  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_41:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5194:5195  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5176:5196  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5176:5182  sender */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5176:5196  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5168:5238  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5277:5278  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5256:5279  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5256:5265  recipient */\n      dup3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5256:5279  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5248:5319  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5379  _balances[sender].sub(amount) */\n      tag_62\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5372:5378  amount */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5359  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5367  _balances[sender] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5360:5366  sender */\n      dup7\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5367  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5371  _balances[sender].sub */\n      tag_44\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5350:5379  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_62:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5330:5339  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5330:5347  _balances[sender] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5340:5346  sender */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5330:5347  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5330:5379  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5444  _balances[recipient].add(amount) */\n      tag_63\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5437:5443  amount */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5421  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5432  _balances[recipient] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5422:5431  recipient */\n      dup6\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5432  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5436  _balances[recipient].add */\n      tag_48\n      swap1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5412:5444  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5389:5398  _balances */\n      0x00\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5389:5409  _balances[recipient] */\n      dup1\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5399:5408  recipient */\n      dup5\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5389:5409  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5389:5444  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5476:5485  recipient */\n      dup2\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5468:5474  sender */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5487:5493  amount */\n      dup4\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5459:5494  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":5079:5501  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1364:1365  a */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1359:1360  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1359:1365  b <= a */\n      gt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1351:1400  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1410:1419  uint256 c */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1426:1427  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1422:1423  a */\n      dup5\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1422:1427  a - b */\n      sub\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1410:1427  uint256 c = a - b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1445:1446  c */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1438:1446  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158208c99827de6af33262b2c867d3fc82b043cd8c55cf5318418e528d115b101bd3164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610d02806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b0565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103ba565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046b565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610510565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610558565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fd565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610614565b6040518082815260200191505060405180910390f35b60006103a633848461069b565b6001905092915050565b6000600254905090565b60006103c7848484610892565b610460843361045b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b600190509392505050565b6000610506338461050185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b61069b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105f333846105ee85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b6001905092915050565b600061060a338484610892565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610caa6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610c636022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610918576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610c856025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610c406023913960400191505060405180910390fd5b6109ef816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a82816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610ba6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610c35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158208c99827de6af33262b2c867d3fc82b043cd8c55cf5318418e528d115b101bd3164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD02 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP5 DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x460 DUP5 CALLER PUSH2 0x45B DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 CALLER DUP5 PUSH2 0x501 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 PUSH2 0x5EE DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCAA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC63 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC85 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC40 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EF DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA82 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP13 SWAP10 DUP3 PUSH30 0xE6AF33262B2C867D3FC82B043CD8C55CF5318418E528D115B101BD316473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "1232:6578:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1232:6578:2;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b0565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103ba565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046b565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610510565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610558565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fd565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610614565b6040518082815260200191505060405180910390f35b60006103a633848461069b565b6001905092915050565b6000600254905090565b60006103c7848484610892565b610460843361045b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b600190509392505050565b6000610506338461050185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b61069b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105f333846105ee85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b6001905092915050565b600061060a338484610892565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610caa6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610c636022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610918576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610c856025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610c406023913960400191505060405180910390fd5b6109ef816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a82816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610ba6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610c35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158208c99827de6af33262b2c867d3fc82b043cd8c55cf5318418e528d115b101bd3164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP5 DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x460 DUP5 CALLER PUSH2 0x45B DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 CALLER DUP5 PUSH2 0x501 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 PUSH2 0x5EE DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCAA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC63 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC85 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC40 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EF DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA82 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP13 SWAP10 DUP3 PUSH30 0xE6AF33262B2C867D3FC82B043CD8C55CF5318418E528D115B101BD316473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "1232:6578:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1232:6578:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2453:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1514:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3055:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3055:252:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3702:203;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3702:203:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1661:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1661:108:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4392:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4392:213:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1972:153;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1972:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2183:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2183:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2453:145;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;2587:4;2580:11;;2453:145;;;;:::o;1514:89::-;1558:7;1584:12;;1577:19;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;3206:73;3215:6;3223:10;3235:43;3271:6;3235:11;:19;3247:6;3235:19;;;;;;;;;;;;;;;:31;3255:10;3235:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3206:8;:73::i;:::-;3296:4;3289:11;;3055:252;;;;;:::o;3702:203::-;3782:4;3798:79;3807:10;3819:7;3828:48;3865:10;3828:11;:23;3840:10;3828:23;;;;;;;;;;;;;;;:32;3852:7;3828:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3798:8;:79::i;:::-;3894:4;3887:11;;3702:203;;;;:::o;1661:108::-;1718:7;1744:9;:18;1754:7;1744:18;;;;;;;;;;;;;;;;1737:25;;1661:108;;;:::o;4392:213::-;4477:4;4493:84;4502:10;4514:7;4523:53;4560:15;4523:11;:23;4535:10;4523:23;;;;;;;;;;;;;;;:32;4547:7;4523:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4493:8;:84::i;:::-;4594:4;4587:11;;4392:213;;;;:::o;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;:::-;2114:4;2107:11;;1972:153;;;;:::o;2183:132::-;2255:7;2281:11;:18;2293:5;2281:18;;;;;;;;;;;;;;;:27;2300:7;2281:27;;;;;;;;;;;;;;;;2274:34;;2183:132;;;;:::o;7117:329::-;7226:1;7209:19;;:5;:19;;;;7201:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7306:1;7287:21;;:7;:21;;;;7279:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:5;7358:11;:18;7370:5;7358:18;;;;;;;;;;;;;;;:27;7377:7;7358:27;;;;;;;;;;;;;;;:35;;;;7424:7;7408:31;;7417:5;7408:31;;;7433:5;7408:31;;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;5194:1;5176:20;;:6;:20;;;;5168:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5277:1;5256:23;;:9;:23;;;;5248:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:29;5372:6;5350:9;:17;5360:6;5350:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5330:9;:17;5340:6;5330:17;;;;;;;;;;;;;;;:49;;;;5412:32;5437:6;5412:9;:20;5422:9;5412:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5389:9;:20;5399:9;5389:20;;;;;;;;;;;;;;;:55;;;;5476:9;5459:35;;5468:6;5459:35;;;5487:6;5459:35;;;;;;;;;;;;;;;;;;5079:422;;;:::o;1274:179:1:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "666000",
								"executionCost": "702",
								"totalCost": "666702"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1196",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "1036",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "MSTORE"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "POP"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "DUP1"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "CODECOPY"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 7810,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158208c99827de6af33262b2c867d3fc82b043cd8c55cf5318418e528d115b101bd3164736f6c63430005110032",
									".code": [
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "MSTORE"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "POP"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "LT"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "SHR"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "GT"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMP"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPDEST"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "EQ"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "JUMPDEST"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 7810,
											"name": "REVERT"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "AND"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MLOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MSTORE"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "MLOAD"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "DUP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SUB"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "RETURN"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP3"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "ADD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP2"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SUB"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "RETURN"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "AND"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "AND"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ISZERO"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MSTORE"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "MLOAD"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP2"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SUB"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "RETURN"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "AND"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MLOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ISZERO"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MSTORE"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "MLOAD"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "DUP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SUB"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP1"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "RETURN"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "AND"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP3"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP3"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MSTORE"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "RETURN"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "AND"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MSTORE"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "RETURN"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "AND"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ISZERO"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MSTORE"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "RETURN"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "AND"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "AND"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MSTORE"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "ADD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SUB"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP1"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "RETURN"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2553,
											"name": "CALLER"
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP5"
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "DUP5"
										},
										{
											"begin": 2534,
											"end": 2542,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2534,
											"end": 2570,
											"name": "JUMPDEST"
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP3"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "SWAP2"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "POP"
										},
										{
											"begin": 2453,
											"end": 2598,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "SLOAD"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "SWAP1"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "POP"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1603,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMPDEST"
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DUP5"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP5"
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP5"
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3160,
											"end": 3196,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP5"
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "CALLER"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "DUP6"
										},
										{
											"begin": 3235,
											"end": 3246,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP11"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "KECCAK256"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "KECCAK256"
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": 3235,
											"end": 3270,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3235,
											"end": 3270,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 3235,
											"end": 3278,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3214,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3206,
											"end": 3279,
											"name": "JUMPDEST"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP4"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "SWAP3"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMPDEST"
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3807,
											"end": 3817,
											"name": "CALLER"
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "DUP5"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3865,
											"end": 3875,
											"name": "DUP6"
										},
										{
											"begin": 3828,
											"end": 3839,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3850,
											"name": "CALLER"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "KECCAK256"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP10"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "KECCAK256"
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SLOAD"
										},
										{
											"begin": 3828,
											"end": 3864,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3828,
											"end": 3864,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "SWAP2"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "SWAP1"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "AND"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3828,
											"end": 3876,
											"name": "JUMPDEST"
										},
										{
											"begin": 3798,
											"end": 3806,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP3"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "POP"
										},
										{
											"begin": 3702,
											"end": 3905,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP1"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1761,
											"name": "DUP4"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "AND"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "AND"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "SWAP1"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "KECCAK256"
										},
										{
											"begin": 1744,
											"end": 1762,
											"name": "SLOAD"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1762,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4502,
											"end": 4512,
											"name": "CALLER"
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP5"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4560,
											"end": 4575,
											"name": "DUP6"
										},
										{
											"begin": 4523,
											"end": 4534,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "CALLER"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "KECCAK256"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP10"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "MSTORE"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "ADD"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "KECCAK256"
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SLOAD"
										},
										{
											"begin": 4523,
											"end": 4559,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 4523,
											"end": 4559,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "SWAP2"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "AND"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "JUMPDEST"
										},
										{
											"begin": 4493,
											"end": 4501,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4493,
											"end": 4577,
											"name": "JUMPDEST"
										},
										{
											"begin": 4594,
											"end": 4598,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "SWAP1"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP3"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2067,
											"end": 2077,
											"name": "CALLER"
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP5"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP5"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2057,
											"end": 2097,
											"name": "JUMPDEST"
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "SWAP1"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 1972,
											"end": 2125,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2292,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP5"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "SWAP1"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "KECCAK256"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "DUP4"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "AND"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "SWAP1"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "DUP2"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "MSTORE"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "ADD"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "KECCAK256"
										},
										{
											"begin": 2281,
											"end": 2308,
											"name": "SLOAD"
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "SWAP1"
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP3"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "SWAP2"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "POP"
										},
										{
											"begin": 2183,
											"end": 2315,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "JUMPDEST"
										},
										{
											"begin": 7226,
											"end": 7227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "AND"
										},
										{
											"begin": 7209,
											"end": 7214,
											"name": "DUP4"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "AND"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "EQ"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "ISZERO"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "JUMPI"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MLOAD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP3"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SUB"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP3"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MSTORE"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "CODECOPY"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "ADD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "POP"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "POP"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "MLOAD"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "DUP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP2"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SUB"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "SWAP1"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "REVERT"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 7201,
											"end": 7269,
											"name": "JUMPDEST"
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "AND"
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "DUP3"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "AND"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "EQ"
										},
										{
											"begin": 7287,
											"end": 7308,
											"name": "ISZERO"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "JUMPI"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MLOAD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP3"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SUB"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP3"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MSTORE"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "CODECOPY"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "ADD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "MLOAD"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "DUP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP2"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SUB"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "SWAP1"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "REVERT"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 7279,
											"end": 7347,
											"name": "JUMPDEST"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DUP1"
										},
										{
											"begin": 7358,
											"end": 7369,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7375,
											"name": "DUP6"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "KECCAK256"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7384,
											"name": "DUP5"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "KECCAK256"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "DUP2"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "SWAP1"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "SSTORE"
										},
										{
											"begin": 7358,
											"end": 7393,
											"name": "POP"
										},
										{
											"begin": 7424,
											"end": 7431,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7417,
											"end": 7422,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7433,
											"end": 7438,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP3"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MSTORE"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "ADD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SUB"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "SWAP1"
										},
										{
											"begin": 7408,
											"end": 7439,
											"name": "LOG3"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "POP"
										},
										{
											"begin": 7117,
											"end": 7446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "JUMPDEST"
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "AND"
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP4"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "AND"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "EQ"
										},
										{
											"begin": 5176,
											"end": 5196,
											"name": "ISZERO"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "JUMPI"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MLOAD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SUB"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MSTORE"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "CODECOPY"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "ADD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "POP"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "POP"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "MLOAD"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "DUP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP2"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SUB"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "SWAP1"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "REVERT"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5168,
											"end": 5238,
											"name": "JUMPDEST"
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "EQ"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "ISZERO"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPI"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "CODECOPY"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "SWAP1"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "REVERT"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5248,
											"end": 5319,
											"name": "JUMPDEST"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP1"
										},
										{
											"begin": 5360,
											"end": 5366,
											"name": "DUP7"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "MSTORE"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "ADD"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "DUP2"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "MSTORE"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "ADD"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "KECCAK256"
										},
										{
											"begin": 5350,
											"end": 5367,
											"name": "SLOAD"
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "SWAP2"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "AND"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "JUMPDEST"
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP1"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP6"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "AND"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "AND"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "SWAP1"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5347,
											"name": "KECCAK256"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "DUP2"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "SSTORE"
										},
										{
											"begin": 5330,
											"end": 5379,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP1"
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP6"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "KECCAK256"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "SLOAD"
										},
										{
											"begin": 5412,
											"end": 5436,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5412,
											"end": 5436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP1"
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP5"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "MSTORE"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "MSTORE"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "KECCAK256"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "SSTORE"
										},
										{
											"begin": 5389,
											"end": 5444,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "DUP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "AND"
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "DUP4"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "AND"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP4"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MLOAD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP3"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MSTORE"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "ADD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "POP"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "POP"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "MLOAD"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "DUP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP2"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SUB"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "SWAP1"
										},
										{
											"begin": 5459,
											"end": 5494,
											"name": "LOG3"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "GT"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "ISZERO"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "REVERT"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP3"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP5"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "SUB"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "SWAP1"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC20` interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. * *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 165,
								"contract": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 171,
								"contract": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 173,
								"contract": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/TestToken.sol": {
				"ast": {
					"absolutePath": "contracts/TestToken.sol",
					"exportedSymbols": {
						"ToyToken": [
							19
						]
					},
					"id": 20,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
							"file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 20,
							"sourceUnit": 550,
							"src": "27:78:0",
							"symbolAliases": [
								{
									"foreign": 2,
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 549,
										"src": "130:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$549",
											"typeString": "contract ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "130:5:0"
								}
							],
							"contractDependencies": [
								549,
								618
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 19,
							"linearizedBaseContracts": [
								19,
								549,
								618
							],
							"name": "ToyToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "205:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 13,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 14,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "231:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 12,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "216:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "216:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "216:22:0"
											}
										]
									},
									"documentation": null,
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "163:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "180:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "162:33:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:0:0"
									},
									"scope": 19,
									"src": "149:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 20,
							"src": "109:140:0"
						}
					],
					"src": "0:249:0"
				},
				"id": 0
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							152
						]
					},
					"id": 153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 21,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "901:109:1",
										"statements": [
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 45,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 30,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 35,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 32,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 33,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 37,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 38,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "951:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "938:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 43,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "1002:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 44,
												"nodeType": "Return",
												"src": "995:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "847:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "858:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 152,
									"src": "834:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1341:112:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1359:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 57,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1364:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1359:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "1351:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1351:49:1"
											},
											{
												"assignments": [
													63
												],
												"declarations": [
													{
														"constant": false,
														"id": 63,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 70,
														"src": "1410:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 62,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1410:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1422:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 65,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1426:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1410:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 63,
													"src": "1445:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 54,
												"id": 69,
												"nodeType": "Return",
												"src": "1438:8:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:1"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:1"
									},
									"scope": 152,
									"src": "1274:179:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1760:391:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1991:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1996:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1991:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 86,
												"nodeType": "IfStatement",
												"src": "1987:45:1",
												"trueBody": {
													"id": 85,
													"nodeType": "Block",
													"src": "1999:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2020:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 79,
															"id": 84,
															"nodeType": "Return",
															"src": "2013:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2042:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 87,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2042:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "2054:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 90,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2058:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2042:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 94,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "2077:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 95,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "2081:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2077:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "2086:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2077:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2089:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 93,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "2069:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2069:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "2143:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 79,
												"id": 103,
												"nodeType": "Return",
												"src": "2136:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1706:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1717:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1705:22:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1750:9:1"
									},
									"scope": 152,
									"src": "1693:458:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "2673:259:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 115,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2757:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2761:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2757:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "2749:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2749:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "2749:44:1"
											},
											{
												"assignments": [
													122
												],
												"declarations": [
													{
														"constant": false,
														"id": 122,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "2803:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 121,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 123,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "2815:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "2819:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2815:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2803:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 127,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "2924:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 113,
												"id": 128,
												"nodeType": "Return",
												"src": "2917:8:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2619:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2630:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2618:22:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2664:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2663:9:1"
									},
									"scope": 152,
									"src": "2606:326:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "3443:82:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 140,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "3461:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3466:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3461:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3469:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "3453:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "3453:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "3513:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "3517:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3513:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 138,
												"id": 149,
												"nodeType": "Return",
												"src": "3506:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3389:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3400:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3388:22:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3434:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3433:9:1"
									},
									"scope": 152,
									"src": "3376:149:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "589:2938:1"
						}
					],
					"src": "0:3528:1"
				},
				"id": 1
			},
			"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							549
						]
					},
					"id": 550,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 155,
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 619,
							"src": "25:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 156,
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 153,
							"src": "48:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 157,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 618,
										"src": "1250:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$618",
											"typeString": "contract IERC20"
										}
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "1250:6:2"
								}
							],
							"contractDependencies": [
								618
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the `IERC20` interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using `_mint`.\nFor a generic mechanism see `ERC20Mintable`.\n * *For a detailed writeup see our guide [How to implement supply\nmechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See `IERC20.approve`.",
							"fullyImplemented": true,
							"id": 549,
							"linearizedBaseContracts": [
								549,
								618
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 161,
									"libraryName": {
										"contractScope": null,
										"id": 159,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 152,
										"src": "1269:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$152",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1263:27:2",
									"typeName": {
										"id": 160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1282:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 165,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 549,
									"src": "1296:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1305:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1296:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 549,
									"src": "1349:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 170,
										"keyType": {
											"id": 166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1358:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1349:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 169,
											"keyType": {
												"id": 167,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1378:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1369:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 168,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1389:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 173,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 549,
									"src": "1425:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 172,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1425:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1567:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "1584:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 177,
												"id": 179,
												"nodeType": "Return",
												"src": "1577:19:2"
											}
										]
									},
									"documentation": "@dev See `IERC20.totalSupply`.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:2:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1558:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1557:9:2"
									},
									"scope": 549,
									"src": "1514:89:2",
									"stateMutability": "view",
									"superFunction": 556,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1727:42:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 188,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1744:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 190,
													"indexExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1754:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1744:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 187,
												"id": 191,
												"nodeType": "Return",
												"src": "1737:25:2"
											}
										]
									},
									"documentation": "@dev See `IERC20.balanceOf`.",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1680:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:17:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1718:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1717:9:2"
									},
									"scope": 549,
									"src": "1661:108:2",
									"stateMutability": "view",
									"superFunction": 563,
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2047:78:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "2067:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2067:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 205,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2079:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 206,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "2090:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 202,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2057:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2057:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2057:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2114:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 201,
												"id": 210,
												"nodeType": "Return",
												"src": "2107:11:2"
											}
										]
									},
									"documentation": "@dev See `IERC20.transfer`.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1990:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2009:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1989:35:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2041:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2041:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2040:6:2"
									},
									"scope": 549,
									"src": "1972:153:2",
									"stateMutability": "nonpayable",
									"superFunction": 572,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "2264:51:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 221,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2281:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 223,
														"indexExpression": {
															"argumentTypes": null,
															"id": 222,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2293:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2281:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 225,
													"indexExpression": {
														"argumentTypes": null,
														"id": 224,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2300:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2281:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 226,
												"nodeType": "Return",
												"src": "2274:34:2"
											}
										]
									},
									"documentation": "@dev See `IERC20.allowance`.",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2202:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2217:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2201:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2255:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2254:9:2"
									},
									"scope": 549,
									"src": "2183:132:2",
									"stateMutability": "view",
									"superFunction": 581,
									"visibility": "public"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "2524:74:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 238,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "2543:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2543:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 240,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "2555:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 241,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2564:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2534:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2534:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "2534:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2587:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 236,
												"id": 245,
												"nodeType": "Return",
												"src": "2580:11:2"
											}
										]
									},
									"documentation": "@dev See `IERC20.approve`.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2470:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2469:32:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2518:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2518:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2517:6:2"
									},
									"scope": 549,
									"src": "2453:145:2",
									"stateMutability": "nonpayable",
									"superFunction": 590,
									"visibility": "public"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3150:157:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 259,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "3170:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 260,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "3178:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 261,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3189:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 258,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "3160:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3160:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "3160:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 265,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "3215:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 266,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "3223:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3223:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 275,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "3271:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 268,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "3235:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 270,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 269,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "3247:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3235:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 271,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "3255:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3255:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3235:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 71,
																"src": "3235:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3235:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 264,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3206:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3206:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "3206:73:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3296:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 257,
												"id": 280,
												"nodeType": "Return",
												"src": "3289:11:2"
											}
										]
									},
									"documentation": "@dev See `IERC20.transferFrom`.\n     * Emits an `Approval` event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of `ERC20`;\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3077:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3093:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3112:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3076:51:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3144:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3144:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3143:6:2"
									},
									"scope": 549,
									"src": "3055:252:2",
									"stateMutability": "nonpayable",
									"superFunction": 601,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3788:117:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 292,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "3807:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3807:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 294,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "3819:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 302,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "3865:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 295,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "3828:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 298,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 296,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "3840:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3840:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3828:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 299,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "3852:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3828:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 46,
																"src": "3828:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3828:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 291,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3798:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3798:79:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "3798:79:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3894:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 290,
												"id": 307,
												"nodeType": "Return",
												"src": "3887:11:2"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3729:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3746:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3746:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3728:37:2"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3782:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3782:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3781:6:2"
									},
									"scope": 549,
									"src": "3702:203:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "4483:122:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 319,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "4502:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4502:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 329,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "4560:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 322,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "4523:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 325,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 323,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "4535:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "4535:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4523:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 327,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 326,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "4547:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4523:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 71,
																"src": "4523:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4523:53:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 318,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4493:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:84:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "4493:84:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4594:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 317,
												"id": 334,
												"nodeType": "Return",
												"src": "4587:11:2"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4419:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4436:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4418:42:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4477:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4477:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4476:6:2"
									},
									"scope": 549,
									"src": "4392:213:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "5158:343:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 346,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "5176:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5194:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5186:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5186:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5176:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5198:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "5168:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5168:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "5168:70:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "5256:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5277:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5269:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5256:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5281:37:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "5248:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5248:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5248:71:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 363,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5330:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 365,
														"indexExpression": {
															"argumentTypes": null,
															"id": 364,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "5340:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5330:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 370,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "5372:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 366,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5350:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 368,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 367,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "5360:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5350:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 71,
															"src": "5350:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5350:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5330:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5330:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 374,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5389:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"argumentTypes": null,
															"id": 375,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5399:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5389:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 381,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "5437:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5412:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "5422:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5412:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "5412:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5412:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5389:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "5389:55:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 386,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "5468:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 387,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5476:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 388,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5487:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "5459:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5459:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "EmitStatement",
												"src": "5454:40:2"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to `transfer`, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a `Transfer` event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5098:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5114:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5133:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5097:51:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5158:0:2"
									},
									"scope": 549,
									"src": "5079:422:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "5828:245:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 400,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5846:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5865:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5857:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5857:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5846:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5869:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "5838:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5838:65:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5838:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 408,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5914:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 411,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5946:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 409,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "5929:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "5929:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5929:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5914:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "5914:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 415,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5963:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 417,
														"indexExpression": {
															"argumentTypes": null,
															"id": 416,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5963:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 422,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "6007:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 418,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5984:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 420,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 419,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "5994:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5984:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "5984:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5984:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5963:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "5963:51:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6046:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6038:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6038:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 430,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6050:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 431,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6059:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 426,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "6029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6029:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "EmitStatement",
												"src": "6024:42:2"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a `Transfer` event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5786:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5786:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5803:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5803:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5785:33:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5828:0:2"
									},
									"scope": 549,
									"src": "5771:302:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "6448:244:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 443,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "6466:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6485:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6477:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6477:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6466:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6489:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "6458:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6458:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "6458:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "6536:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 454,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "6568:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 452,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "6551:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 71,
															"src": "6551:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6551:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6536:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6536:38:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 458,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "6584:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 460,
														"indexExpression": {
															"argumentTypes": null,
															"id": 459,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "6594:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6584:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 465,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "6628:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 461,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "6605:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 463,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 462,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "6615:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6605:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 71,
															"src": "6605:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6605:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6584:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "6584:50:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 470,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "6658:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6675:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6667:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6667:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 474,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "6679:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "6649:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6649:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "EmitStatement",
												"src": "6644:41:2"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a `Transfer` event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "6407:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "6424:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6406:32:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6448:0:2"
									},
									"scope": 549,
									"src": "6392:300:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "7191:255:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 488,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "7209:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7226:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7218:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7218:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7209:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7230:38:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "7201:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7201:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "7201:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 497,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "7287:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7306:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7298:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7298:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7287:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7310:36:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															636,
															637
														],
														"referencedDeclaration": 637,
														"src": "7279:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7279:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "7279:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 505,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "7358:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 508,
															"indexExpression": {
																"argumentTypes": null,
																"id": 506,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "7370:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7358:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"argumentTypes": null,
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "7377:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7358:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 510,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "7388:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7358:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "7358:35:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "7417:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "7424:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 516,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7433:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "7408:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7408:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "EmitStatement",
												"src": "7403:36:2"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an `Approval` event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "7135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "7150:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "7167:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7134:47:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7191:0:2"
									},
									"scope": 549,
									"src": "7117:329:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "7684:124:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 528,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "7700:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 529,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "7709:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "7694:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7694:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "7694:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 533,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "7735:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 534,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "7744:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7744:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 543,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "7793:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 536,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "7756:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 538,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 537,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "7768:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7756:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 541,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 539,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "7777:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7777:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7756:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 71,
																"src": "7756:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "7726:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7726:75:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "7726:75:2"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See `_burn` and `_approve`.",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7642:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7642:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7659:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7659:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7641:33:2"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7684:0:2"
									},
									"scope": 549,
									"src": "7623:185:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 550,
							"src": "1232:6578:2"
						}
					],
					"src": "0:7811:2"
				},
				"id": 2
			},
			"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							618
						]
					},
					"id": 619,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 551,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 618,
							"linearizedBaseContracts": [
								618
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:3"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "316:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:3"
									},
									"scope": 618,
									"src": "270:55:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "427:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "467:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:3"
									},
									"scope": 618,
									"src": "408:68:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "714:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "733:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "767:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:3"
									},
									"scope": 618,
									"src": "696:77:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through `transferFrom`. This is\nzero by default.\n     * This value changes when `approve` or `transferFrom` are called.",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1067:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1082:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1122:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:3"
									},
									"scope": 618,
									"src": "1048:83:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * > Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an `Approval` event.",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1792:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1809:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1791:33:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1843:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:6:3"
									},
									"scope": 618,
									"src": "1775:74:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2178:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2194:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2213:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2177:51:3"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2247:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2247:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2246:6:3"
									},
									"scope": 618,
									"src": "2156:97:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 609,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2437:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2459:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2479:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2436:57:3"
									},
									"src": "2422:72:3"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to `approve`. `value` is the new allowance.",
									"id": 617,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2668:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2691:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2716:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2667:63:3"
									},
									"src": "2653:78:3"
								}
							],
							"scope": 619,
							"src": "176:2557:3"
						}
					],
					"src": "0:2734:3"
				},
				"id": 3
			}
		}
	}
}